{% extends 'base.html.twig' %}
{% block MenuCatalog %} class="sidebar-nav-menu open" {% endblock MenuCatalog %}
{% block MenuPackage %} class="active" {% endblock MenuPackage %}
{% block ulCatalog %} style="display: block;" {% endblock ulCatalog %}

{% block iconHead %}
    <i class="fa fa-pencil-square-o"></i>
{% endblock iconHead %}

{% block pageTitle %}
    {% trans %}Package{% endtrans %}
{% endblock pageTitle %}
{% block subtitle %}
    Editar
{% endblock subtitle %}

{% block titlePanel %}
    Edición {% trans %}Package{% endtrans %}
{% endblock titlePanel %}
{% block action %}{% endblock action %}
{% block bodyPanel %}
    {{ form_start(delete_form) }}
    <div class="form-group form-actions">
        <div class="col-md-12 col-md-offset-6">
            <input type="submit" class="btn btn-sm btn-danger" value="{% trans %}Delete{% endtrans %}">
        </div>
    </div>
    {{ form_end(delete_form) }}    {{ form_start(edit_form, {'attr': {'class': 'form-horizontal form-bordered'} }) }}
    {#{{ form_widget(edit_form) }}#}
    {{ form_start(edit_form, {'attr': {'class': 'form-horizontal form-bordered'} }) }}
    {{ form_row(edit_form.name) }}
    {{ form_row(edit_form.headquarter) }}
    <ul class="item list list-unstyled form-inline text-center"
        data-prototype="{{ form_widget(edit_form.packageLodging.vars.prototype)|e }}">

        <h3>Alojamiento</h3>
        <style>
            li > div > div.form-group > select, li > div > div.form-group > input {
                width: 100%;
            }
        </style>
        {# iterate over each existing tag and render its only field: name #}
        {% for packageLodging in edit_form.packageLodging %}
            <li class="bg-info">
                {{ form_widget(packageLodging.lodging) }}
                {{ form_widget(packageLodging.lodging_price) }}
            </li>
        {% endfor %}
    </ul>
    {{ form_row(edit_form.price) }}
    {{ form_row(edit_form.semanas) }}
    {{ form_row(edit_form.price_inscription) }}
    {{ form_row(edit_form.description_inscription) }}
    <div class="form-group">
        <div class="col-md-12 col-md-offset-6">
            <input type="submit" value="{% trans %}Edit{% endtrans %}" class="btn btn-sm btn-success"/>
        </div>
    </div>
    <div class="form-group form-actions">
        <div class="col-md-12 col-md-offset-6">
            <a href="{{ path('admin_package_index') }}" class="btn btn-sm btn-primary">
                <i class="hi hi-chevron-left"></i>
                Regresar
            </a>
        </div>
    </div>
    {{ form_end(edit_form) }}
{% endblock bodyPanel %}
{% block extraJS %}
    <script type="text/javascript">
        // setup an "add a tag" link
        var $addTagLink = $('<a href="#" class="btn btn-sm btn-warning">Agregar</a>');
        var $newLinkLi = $('<div class="col-md-12"></div>').append($addTagLink);

        jQuery(document).ready(function () {
            // Get the ul that holds the collection of tags
            var $collectionHolder = $(this).find('ul.item');
            // add a delete link to all of the existing tag form li elements
            $collectionHolder.find('li').each(function () {
                addTagFormDeleteLink($(this));
            });
            // add the "add a tag" anchor and li to the tags ul
            $collectionHolder.append($newLinkLi);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addTagLink.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new tag form (see code block below)
                addTagForm($collectionHolder, $newLinkLi);
                $('.select-select2').select2();
            });


        });

        function addTagForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');
            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '$$name$$' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li class="bg-info"></li>').append(newForm);

            // also add a remove button, just for this example
            //$newFormLi.append('<a href="#" class="remove-tag btn btn-xs btn-danger"><i class="fa fa-minus-square"></i></a>');

            $newLinkLi.before($newFormLi);

            // handle the removal, just for this example
            $('.remove-tag').click(function (e) {
                e.preventDefault();

                $(this).parent().remove();

                return false;
            });
            // add a delete link to the new form
            addTagFormDeleteLink($newFormLi);
        }

        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormA = $('<a href="#" class="btn btn-xs btn-danger"><i class="fa fa-eraser"></i></a>');
            $tagFormLi.append($removeFormA);

            $removeFormA.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the tag form
                $tagFormLi.remove();
            });
        }
    </script>
    <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', {'callback': 'fos.Router.setData'}) }}"></script>
    <script type="text/javascript">
        $(".headquarter_selector").change(function () {
            var data = {
                headquarterId: $(this).val()
            };

            $.ajax({
                type: 'post',
                url: Routing.generate('select_courses', null, true),
                data: data,
                success: function (data) {
                    var $course_selector = $('.course_selector');
                    $course_selector.html('<option>Seleccionar opción</option>');

                    for (var i = 0, total = data.length; i < total; i++) {
                        $course_selector.append('<option value="' + data[i].id + '">' + data[i].name + '</option>');
                    }
                }
            });
        });
    </script>
{% endblock extraJS %}